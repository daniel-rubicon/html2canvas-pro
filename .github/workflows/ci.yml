name: CI

on:
    push:
        branches: [main]
        tags:
            - 'v*'
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Npm install
              run: npm ci
            - name: Build
              run: npm run build
            - name: Pack
              run: |
                  npm pack
                  mv html2canvas-*.tgz html2canvas-pro.tgz
                  tar --list --verbose --file=html2canvas-pro.tgz
            - name: Upload npm pack
              uses: actions/upload-artifact@v3
              with:
                  name: npm
                  path: html2canvas-pro.tgz
                  if-no-files-found: error
            - name: Upload dist
              uses: actions/upload-artifact@v3
              with:
                  name: dist
                  path: dist
                  if-no-files-found: error
            - name: Upload build
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: build
                  if-no-files-found: error

    test:
        runs-on: ubuntu-latest
        name: Test
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Npm install
              run: npm ci
            - name: Build
              run: npm run build
            - name: Lint
              run: npm run lint
            - name: Unit tests
              run: npm run unittest
    browser-test:
        strategy:
            fail-fast: false
            matrix:
                config:
                    - os: ubuntu-latest
                      name: Linux Firefox Stable
                      targetBrowser: Firefox_Stable
                      xvfb: true
                    - os: ubuntu-latest
                      name: Linux Chrome Stable
                      targetBrowser: Chrome_Stable
                      xvfb: true
                    - os: macos-latest
                      name: OSX Safari Stable
                      targetBrowser: Safari_Stable
        runs-on: ${{ matrix.config.os }}
        name: ${{ matrix.config.name }}
        env:
            TARGET_BROWSER: ${{ matrix.config.targetBrowser }}
        needs: build
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Npm install
              run: npm ci
            - name: Download library
              uses: actions/download-artifact@v3
              with:
                  name: dist
                  path: dist
            - name: Download test-runner
              uses: actions/download-artifact@v3
              with:
                  name: build
                  path: build
            - name: xcode selection
              if: ${{ matrix.config.xcode != '' }}
              run: sudo xcode-select -s "${{ matrix.config.xcode }}"
            - name: Run browser tests
              if: ${{ matrix.config.xvfb != true }}
              run: npm run karma
            - name: Start Xvfb
              if: ${{ matrix.config.xvfb == true }}
              run: Xvfb :99 &
            - name: Run browser tests
              if: ${{ matrix.config.xvfb == true }}
              run: DISPLAY=:99 npm run karma
            - name: Upload screenshots
              uses: actions/upload-artifact@v3
              with:
                  name: reftest-results
                  path: tmp/reftests
                  if-no-files-found: error
    publish:
        runs-on: ubuntu-latest
        name: Publish NPM
        if: startsWith(github.ref, 'refs/tags/v')
        needs: browser-test
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v3
            - name: Download NPM package
              uses: actions/download-artifact@v3
              with:
                  name: npm
                  path: npm
            - name: Download library
              uses: actions/download-artifact@v3
              with:
                  name: dist
                  path: dist
            - name: Create Github Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: false
                  prerelease: ${{ contains(github.ref, '-rc.') || contains(github.ref, '-alpha.') }}
            - name: Upload html2canvas-pro.js
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/html2canvas-pro.js
                  asset_name: html2canvas-pro.js
                  asset_content_type: text/javascript
            - name: Upload html2canvas-pro.min.js
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/html2canvas-pro.min.js
                  asset_name: html2canvas-pro.min.js
                  asset_content_type: text/javascript
            - name: Upload html2canvas-pro.esm.js
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/html2canvas-pro.esm.js
                  asset_name: html2canvas-pro.esm.js
                  asset_content_type: text/javascript
            - name: Unpack npm
              run: cd npm && tar -xvzf "html2canvas-pro.tgz"
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
                  registry-url: 'https://registry.npmjs.org'
            - name: NPM Publish
              run: cd npm/package && npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    publish-gpr:
        runs-on: ubuntu-latest
        name: Publish Github Package
        if: startsWith(github.ref, 'refs/tags/v')
        needs: browser-test
        permissions:
            contents: write
            packages: write
        steps:
            - uses: actions/checkout@v3
            - name: Download NPM package
              uses: actions/download-artifact@v3
              with:
                  name: npm
                  path: npm
            - name: Download library
              uses: actions/download-artifact@v3
              with:
                  name: dist
                  path: dist
            - name: Unpack npm
              run: cd npm && tar -xvzf "html2canvas-pro.tgz"
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
                  registry-url: https://npm.pkg.github.com/
            - run: npm pkg set publishConfig.registry=https://npm.pkg.github.com
            - run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
